1. function solve(int n){
    for(let i = 0; i < n; i++){
        for(int j=0; j < i / 2; j++){
            // O(1) operation
        }
    }
}

->

for loop i it runs n time
for loop j it depends on i value on it runs i/2 times

By adding 1/2 + 2/3 + 3/2 ...(n-1)/2

so 1/2(1 + 2+ 3 ... (n-1))

we have,
   (n(n+1))/2

 = 1/2 ((n-1)(n-1+1))/2
 = 1/2 (n(n-1))/2
 = 1/2 (n^2-n)/2
 = (n^2-n)/4
 =O((n^2-n)/4)
 =O(n^2)